/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import { FunctionFragment, Result, EventFragment } from "@ethersproject/abi";
import { Listener, Provider } from "@ethersproject/providers";
import { TypedEventFilter, TypedEvent, TypedListener, OnEvent } from "./common";

export interface SettingsV2Interface extends utils.Interface {
  functions: {
    "DEPOSIT_TRIGGER_AMOUNT()": FunctionFragment;
    "DEPOSIT_TRIGGER_TIME()": FunctionFragment;
    "ETH()": FunctionFragment;
    "MIN_OUTFLOW_ALLOWED()": FunctionFragment;
    "PARTIAL_DEPOSIT()": FunctionFragment;
    "POOL_BUFFER()": FunctionFragment;
    "PRECISSION()": FunctionFragment;
    "getPrecission()": FunctionFragment;
    "initialize()": FunctionFragment;
    "owner()": FunctionFragment;
    "renounceOwnership()": FunctionFragment;
    "setPrecission(uint256)": FunctionFragment;
    "transferOwnership(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "DEPOSIT_TRIGGER_AMOUNT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEPOSIT_TRIGGER_TIME",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "ETH", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "MIN_OUTFLOW_ALLOWED",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PARTIAL_DEPOSIT",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "POOL_BUFFER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "PRECISSION",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getPrecission",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "renounceOwnership",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setPrecission",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "transferOwnership",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "DEPOSIT_TRIGGER_AMOUNT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEPOSIT_TRIGGER_TIME",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "ETH", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "MIN_OUTFLOW_ALLOWED",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "PARTIAL_DEPOSIT",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "POOL_BUFFER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "PRECISSION", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getPrecission",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "renounceOwnership",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setPrecission",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferOwnership",
    data: BytesLike
  ): Result;

  events: {
    "Initialized(uint8)": EventFragment;
    "OwnershipTransferred(address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "Initialized"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment;
}

export type InitializedEvent = TypedEvent<[number], { version: number }>;

export type InitializedEventFilter = TypedEventFilter<InitializedEvent>;

export type OwnershipTransferredEvent = TypedEvent<
  [string, string],
  { previousOwner: string; newOwner: string }
>;

export type OwnershipTransferredEventFilter =
  TypedEventFilter<OwnershipTransferredEvent>;

export interface SettingsV2 extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: SettingsV2Interface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    DEPOSIT_TRIGGER_AMOUNT(overrides?: CallOverrides): Promise<[BigNumber]>;

    DEPOSIT_TRIGGER_TIME(overrides?: CallOverrides): Promise<[BigNumber]>;

    ETH(overrides?: CallOverrides): Promise<[string]>;

    MIN_OUTFLOW_ALLOWED(overrides?: CallOverrides): Promise<[BigNumber]>;

    PARTIAL_DEPOSIT(overrides?: CallOverrides): Promise<[number]>;

    POOL_BUFFER(overrides?: CallOverrides): Promise<[BigNumber]>;

    PRECISSION(overrides?: CallOverrides): Promise<[BigNumber]>;

    getPrecission(overrides?: CallOverrides): Promise<[BigNumber]>;

    initialize(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    owner(overrides?: CallOverrides): Promise<[string]>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setPrecission(
      _precission: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  DEPOSIT_TRIGGER_AMOUNT(overrides?: CallOverrides): Promise<BigNumber>;

  DEPOSIT_TRIGGER_TIME(overrides?: CallOverrides): Promise<BigNumber>;

  ETH(overrides?: CallOverrides): Promise<string>;

  MIN_OUTFLOW_ALLOWED(overrides?: CallOverrides): Promise<BigNumber>;

  PARTIAL_DEPOSIT(overrides?: CallOverrides): Promise<number>;

  POOL_BUFFER(overrides?: CallOverrides): Promise<BigNumber>;

  PRECISSION(overrides?: CallOverrides): Promise<BigNumber>;

  getPrecission(overrides?: CallOverrides): Promise<BigNumber>;

  initialize(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  owner(overrides?: CallOverrides): Promise<string>;

  renounceOwnership(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setPrecission(
    _precission: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  transferOwnership(
    newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    DEPOSIT_TRIGGER_AMOUNT(overrides?: CallOverrides): Promise<BigNumber>;

    DEPOSIT_TRIGGER_TIME(overrides?: CallOverrides): Promise<BigNumber>;

    ETH(overrides?: CallOverrides): Promise<string>;

    MIN_OUTFLOW_ALLOWED(overrides?: CallOverrides): Promise<BigNumber>;

    PARTIAL_DEPOSIT(overrides?: CallOverrides): Promise<number>;

    POOL_BUFFER(overrides?: CallOverrides): Promise<BigNumber>;

    PRECISSION(overrides?: CallOverrides): Promise<BigNumber>;

    getPrecission(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(overrides?: CallOverrides): Promise<void>;

    owner(overrides?: CallOverrides): Promise<string>;

    renounceOwnership(overrides?: CallOverrides): Promise<void>;

    setPrecission(
      _precission: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    transferOwnership(
      newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    "Initialized(uint8)"(version?: null): InitializedEventFilter;
    Initialized(version?: null): InitializedEventFilter;

    "OwnershipTransferred(address,address)"(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
    OwnershipTransferred(
      previousOwner?: string | null,
      newOwner?: string | null
    ): OwnershipTransferredEventFilter;
  };

  estimateGas: {
    DEPOSIT_TRIGGER_AMOUNT(overrides?: CallOverrides): Promise<BigNumber>;

    DEPOSIT_TRIGGER_TIME(overrides?: CallOverrides): Promise<BigNumber>;

    ETH(overrides?: CallOverrides): Promise<BigNumber>;

    MIN_OUTFLOW_ALLOWED(overrides?: CallOverrides): Promise<BigNumber>;

    PARTIAL_DEPOSIT(overrides?: CallOverrides): Promise<BigNumber>;

    POOL_BUFFER(overrides?: CallOverrides): Promise<BigNumber>;

    PRECISSION(overrides?: CallOverrides): Promise<BigNumber>;

    getPrecission(overrides?: CallOverrides): Promise<BigNumber>;

    initialize(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    owner(overrides?: CallOverrides): Promise<BigNumber>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setPrecission(
      _precission: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    DEPOSIT_TRIGGER_AMOUNT(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    DEPOSIT_TRIGGER_TIME(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    ETH(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    MIN_OUTFLOW_ALLOWED(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    PARTIAL_DEPOSIT(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    POOL_BUFFER(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    PRECISSION(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getPrecission(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initialize(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    renounceOwnership(
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setPrecission(
      _precission: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    transferOwnership(
      newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
