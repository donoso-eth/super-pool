// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdminChanged extends ethereum.Event {
  get params(): AdminChanged__Params {
    return new AdminChanged__Params(this);
  }
}

export class AdminChanged__Params {
  _event: AdminChanged;

  constructor(event: AdminChanged) {
    this._event = event;
  }

  get previousAdmin(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newAdmin(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class BeaconUpgraded extends ethereum.Event {
  get params(): BeaconUpgraded__Params {
    return new BeaconUpgraded__Params(this);
  }
}

export class BeaconUpgraded__Params {
  _event: BeaconUpgraded;

  constructor(event: BeaconUpgraded) {
    this._event = event;
  }

  get beacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class Upgraded extends ethereum.Event {
  get params(): Upgraded__Params {
    return new Upgraded__Params(this);
  }
}

export class Upgraded__Params {
  _event: Upgraded;

  constructor(event: Upgraded) {
    this._event = event;
  }

  get implementation(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolInternalV2___calculateIndexesResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class PoolInternalV2___calculateIndexesInputLastPoolStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get nrSuppliers(): BigInt {
    return this[2].toBigInt();
  }

  get deposit(): BigInt {
    return this[3].toBigInt();
  }

  get depositFromInFlowRate(): BigInt {
    return this[4].toBigInt();
  }

  get inFlowRate(): BigInt {
    return this[5].toBigInt();
  }

  get outFlowRate(): BigInt {
    return this[6].toBigInt();
  }

  get outFlowBuffer(): BigInt {
    return this[7].toBigInt();
  }

  get yieldTokenIndex(): BigInt {
    return this[8].toBigInt();
  }

  get yieldInFlowRateIndex(): BigInt {
    return this[9].toBigInt();
  }

  get yieldAccrued(): BigInt {
    return this[10].toBigInt();
  }

  get yieldSnapshot(): BigInt {
    return this[11].toBigInt();
  }

  get totalYield(): BigInt {
    return this[12].toBigInt();
  }

  get apy(): PoolInternalV2___calculateIndexesInputLastPoolApyStruct {
    return changetype<PoolInternalV2___calculateIndexesInputLastPoolApyStruct>(
      this[13].toTuple()
    );
  }
}

export class PoolInternalV2___calculateIndexesInputLastPoolApyStruct extends ethereum.Tuple {
  get span(): BigInt {
    return this[0].toBigInt();
  }

  get apy(): BigInt {
    return this[1].toBigInt();
  }
}

export class PoolInternalV2__createFlowInputDecodedContextStruct extends ethereum.Tuple {
  get appCallbackLevel(): i32 {
    return this[0].toI32();
  }

  get callType(): i32 {
    return this[1].toI32();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get msgSender(): Address {
    return this[3].toAddress();
  }

  get agreementSelector(): Bytes {
    return this[4].toBytes();
  }

  get userData(): Bytes {
    return this[5].toBytes();
  }

  get appCreditGranted(): BigInt {
    return this[6].toBigInt();
  }

  get appCreditWantedDeprecated(): BigInt {
    return this[7].toBigInt();
  }

  get appCreditUsed(): BigInt {
    return this[8].toBigInt();
  }

  get appAddress(): Address {
    return this[9].toAddress();
  }

  get appCreditToken(): Address {
    return this[10].toAddress();
  }
}

export class PoolInternalV2__getLastPoolResultPoolStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get nrSuppliers(): BigInt {
    return this[2].toBigInt();
  }

  get deposit(): BigInt {
    return this[3].toBigInt();
  }

  get depositFromInFlowRate(): BigInt {
    return this[4].toBigInt();
  }

  get inFlowRate(): BigInt {
    return this[5].toBigInt();
  }

  get outFlowRate(): BigInt {
    return this[6].toBigInt();
  }

  get outFlowBuffer(): BigInt {
    return this[7].toBigInt();
  }

  get yieldTokenIndex(): BigInt {
    return this[8].toBigInt();
  }

  get yieldInFlowRateIndex(): BigInt {
    return this[9].toBigInt();
  }

  get yieldAccrued(): BigInt {
    return this[10].toBigInt();
  }

  get yieldSnapshot(): BigInt {
    return this[11].toBigInt();
  }

  get totalYield(): BigInt {
    return this[12].toBigInt();
  }

  get apy(): PoolInternalV2__getLastPoolResultPoolApyStruct {
    return changetype<PoolInternalV2__getLastPoolResultPoolApyStruct>(
      this[13].toTuple()
    );
  }
}

export class PoolInternalV2__getLastPoolResultPoolApyStruct extends ethereum.Tuple {
  get span(): BigInt {
    return this[0].toBigInt();
  }

  get apy(): BigInt {
    return this[1].toBigInt();
  }
}

export class PoolInternalV2__getPoolResultPoolStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get timestamp(): BigInt {
    return this[1].toBigInt();
  }

  get nrSuppliers(): BigInt {
    return this[2].toBigInt();
  }

  get deposit(): BigInt {
    return this[3].toBigInt();
  }

  get depositFromInFlowRate(): BigInt {
    return this[4].toBigInt();
  }

  get inFlowRate(): BigInt {
    return this[5].toBigInt();
  }

  get outFlowRate(): BigInt {
    return this[6].toBigInt();
  }

  get outFlowBuffer(): BigInt {
    return this[7].toBigInt();
  }

  get yieldTokenIndex(): BigInt {
    return this[8].toBigInt();
  }

  get yieldInFlowRateIndex(): BigInt {
    return this[9].toBigInt();
  }

  get yieldAccrued(): BigInt {
    return this[10].toBigInt();
  }

  get yieldSnapshot(): BigInt {
    return this[11].toBigInt();
  }

  get totalYield(): BigInt {
    return this[12].toBigInt();
  }

  get apy(): PoolInternalV2__getPoolResultPoolApyStruct {
    return changetype<PoolInternalV2__getPoolResultPoolApyStruct>(
      this[13].toTuple()
    );
  }
}

export class PoolInternalV2__getPoolResultPoolApyStruct extends ethereum.Tuple {
  get span(): BigInt {
    return this[0].toBigInt();
  }

  get apy(): BigInt {
    return this[1].toBigInt();
  }
}

export class PoolInternalV2__getSupplierResultSupplierStruct extends ethereum.Tuple {
  get id(): BigInt {
    return this[0].toBigInt();
  }

  get supplier(): Address {
    return this[1].toAddress();
  }

  get cumulatedYield(): BigInt {
    return this[2].toBigInt();
  }

  get deposit(): BigInt {
    return this[3].toBigInt();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get createdTimestamp(): BigInt {
    return this[5].toBigInt();
  }

  get eventId(): BigInt {
    return this[6].toBigInt();
  }

  get inStream(): PoolInternalV2__getSupplierResultSupplierInStreamStruct {
    return changetype<PoolInternalV2__getSupplierResultSupplierInStreamStruct>(
      this[7].toTuple()
    );
  }

  get outStream(): PoolInternalV2__getSupplierResultSupplierOutStreamStruct {
    return changetype<PoolInternalV2__getSupplierResultSupplierOutStreamStruct>(
      this[8].toTuple()
    );
  }

  get apy(): PoolInternalV2__getSupplierResultSupplierApyStruct {
    return changetype<PoolInternalV2__getSupplierResultSupplierApyStruct>(
      this[9].toTuple()
    );
  }
}

export class PoolInternalV2__getSupplierResultSupplierInStreamStruct extends ethereum.Tuple {
  get flow(): BigInt {
    return this[0].toBigInt();
  }

  get cancelFlowId(): Bytes {
    return this[1].toBytes();
  }
}

export class PoolInternalV2__getSupplierResultSupplierOutStreamStruct extends ethereum.Tuple {
  get flow(): BigInt {
    return this[0].toBigInt();
  }

  get cancelFlowId(): Bytes {
    return this[1].toBytes();
  }

  get stepAmount(): BigInt {
    return this[2].toBigInt();
  }

  get stepTime(): BigInt {
    return this[3].toBigInt();
  }

  get initTime(): BigInt {
    return this[4].toBigInt();
  }

  get minBalance(): BigInt {
    return this[5].toBigInt();
  }

  get cancelWithdrawId(): Bytes {
    return this[6].toBytes();
  }
}

export class PoolInternalV2__getSupplierResultSupplierApyStruct extends ethereum.Tuple {
  get span(): BigInt {
    return this[0].toBigInt();
  }

  get apy(): BigInt {
    return this[1].toBigInt();
  }
}

export class PoolInternalV2__poolByTimestampResultApyStruct extends ethereum.Tuple {
  get span(): BigInt {
    return this[0].toBigInt();
  }

  get apy(): BigInt {
    return this[1].toBigInt();
  }
}

export class PoolInternalV2__poolByTimestampResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: BigInt;
  value8: BigInt;
  value9: BigInt;
  value10: BigInt;
  value11: BigInt;
  value12: BigInt;
  value13: PoolInternalV2__poolByTimestampResultApyStruct;

  constructor(
    value0: BigInt,
    value1: BigInt,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: BigInt,
    value8: BigInt,
    value9: BigInt,
    value10: BigInt,
    value11: BigInt,
    value12: BigInt,
    value13: PoolInternalV2__poolByTimestampResultApyStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
    this.value10 = value10;
    this.value11 = value11;
    this.value12 = value12;
    this.value13 = value13;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromSignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromSignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromUnsignedBigInt(this.value7));
    map.set("value8", ethereum.Value.fromUnsignedBigInt(this.value8));
    map.set("value9", ethereum.Value.fromUnsignedBigInt(this.value9));
    map.set("value10", ethereum.Value.fromUnsignedBigInt(this.value10));
    map.set("value11", ethereum.Value.fromUnsignedBigInt(this.value11));
    map.set("value12", ethereum.Value.fromUnsignedBigInt(this.value12));
    map.set("value13", ethereum.Value.fromTuple(this.value13));
    return map;
  }
}

export class PoolInternalV2__suppliersByAddressResultInStreamStruct extends ethereum.Tuple {
  get flow(): BigInt {
    return this[0].toBigInt();
  }

  get cancelFlowId(): Bytes {
    return this[1].toBytes();
  }
}

export class PoolInternalV2__suppliersByAddressResultOutStreamStruct extends ethereum.Tuple {
  get flow(): BigInt {
    return this[0].toBigInt();
  }

  get cancelFlowId(): Bytes {
    return this[1].toBytes();
  }

  get stepAmount(): BigInt {
    return this[2].toBigInt();
  }

  get stepTime(): BigInt {
    return this[3].toBigInt();
  }

  get initTime(): BigInt {
    return this[4].toBigInt();
  }

  get minBalance(): BigInt {
    return this[5].toBigInt();
  }

  get cancelWithdrawId(): Bytes {
    return this[6].toBytes();
  }
}

export class PoolInternalV2__suppliersByAddressResultApyStruct extends ethereum.Tuple {
  get span(): BigInt {
    return this[0].toBigInt();
  }

  get apy(): BigInt {
    return this[1].toBigInt();
  }
}

export class PoolInternalV2__suppliersByAddressResult {
  value0: BigInt;
  value1: Address;
  value2: BigInt;
  value3: BigInt;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: PoolInternalV2__suppliersByAddressResultInStreamStruct;
  value8: PoolInternalV2__suppliersByAddressResultOutStreamStruct;
  value9: PoolInternalV2__suppliersByAddressResultApyStruct;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: BigInt,
    value3: BigInt,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: PoolInternalV2__suppliersByAddressResultInStreamStruct,
    value8: PoolInternalV2__suppliersByAddressResultOutStreamStruct,
    value9: PoolInternalV2__suppliersByAddressResultApyStruct
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
    this.value9 = value9;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    map.set("value8", ethereum.Value.fromTuple(this.value8));
    map.set("value9", ethereum.Value.fromTuple(this.value9));
    return map;
  }
}

export class PoolInternalV2 extends ethereum.SmartContract {
  static bind(address: Address): PoolInternalV2 {
    return new PoolInternalV2("PoolInternalV2", address);
  }

  MIN_OUTFLOW_ALLOWED(): BigInt {
    let result = super.call(
      "MIN_OUTFLOW_ALLOWED",
      "MIN_OUTFLOW_ALLOWED():(uint56)",
      []
    );

    return result[0].toBigInt();
  }

  try_MIN_OUTFLOW_ALLOWED(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "MIN_OUTFLOW_ALLOWED",
      "MIN_OUTFLOW_ALLOWED():(uint56)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  POOL_BUFFER(): BigInt {
    let result = super.call("POOL_BUFFER", "POOL_BUFFER():(uint256)", []);

    return result[0].toBigInt();
  }

  try_POOL_BUFFER(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("POOL_BUFFER", "POOL_BUFFER():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  PRECISSION(): BigInt {
    let result = super.call("PRECISSION", "PRECISSION():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PRECISSION(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("PRECISSION", "PRECISSION():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  STEPS(): i32 {
    let result = super.call("STEPS", "STEPS():(uint8)", []);

    return result[0].toI32();
  }

  try_STEPS(): ethereum.CallResult<i32> {
    let result = super.tryCall("STEPS", "STEPS():(uint8)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  SUPERFLUID_DEPOSIT(): BigInt {
    let result = super.call(
      "SUPERFLUID_DEPOSIT",
      "SUPERFLUID_DEPOSIT():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_SUPERFLUID_DEPOSIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "SUPERFLUID_DEPOSIT",
      "SUPERFLUID_DEPOSIT():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  _calculateIndexes(
    yieldPeriod: BigInt,
    lastPool: PoolInternalV2___calculateIndexesInputLastPoolStruct
  ): PoolInternalV2___calculateIndexesResult {
    let result = super.call(
      "_calculateIndexes",
      "_calculateIndexes(uint256,(uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256))):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(yieldPeriod),
        ethereum.Value.fromTuple(lastPool)
      ]
    );

    return new PoolInternalV2___calculateIndexesResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try__calculateIndexes(
    yieldPeriod: BigInt,
    lastPool: PoolInternalV2___calculateIndexesInputLastPoolStruct
  ): ethereum.CallResult<PoolInternalV2___calculateIndexesResult> {
    let result = super.tryCall(
      "_calculateIndexes",
      "_calculateIndexes(uint256,(uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256))):(uint256,uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(yieldPeriod),
        ethereum.Value.fromTuple(lastPool)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolInternalV2___calculateIndexesResult(
        value[0].toBigInt(),
        value[1].toBigInt()
      )
    );
  }

  _calculateYieldSupplier(_supplier: Address): BigInt {
    let result = super.call(
      "_calculateYieldSupplier",
      "_calculateYieldSupplier(address):(uint256)",
      [ethereum.Value.fromAddress(_supplier)]
    );

    return result[0].toBigInt();
  }

  try__calculateYieldSupplier(_supplier: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "_calculateYieldSupplier",
      "_calculateYieldSupplier(address):(uint256)",
      [ethereum.Value.fromAddress(_supplier)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createFlow(
    newCtx: Bytes,
    decodedContext: PoolInternalV2__createFlowInputDecodedContextStruct,
    inFlowRate: BigInt,
    sender: Address
  ): Bytes {
    let result = super.call(
      "createFlow",
      "createFlow(bytes,(uint8,uint8,uint256,address,bytes4,bytes,uint256,uint256,int256,address,address),int96,address):(bytes)",
      [
        ethereum.Value.fromBytes(newCtx),
        ethereum.Value.fromTuple(decodedContext),
        ethereum.Value.fromSignedBigInt(inFlowRate),
        ethereum.Value.fromAddress(sender)
      ]
    );

    return result[0].toBytes();
  }

  try_createFlow(
    newCtx: Bytes,
    decodedContext: PoolInternalV2__createFlowInputDecodedContextStruct,
    inFlowRate: BigInt,
    sender: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createFlow",
      "createFlow(bytes,(uint8,uint8,uint256,address,bytes4,bytes,uint256,uint256,int256,address,address),int96,address):(bytes)",
      [
        ethereum.Value.fromBytes(newCtx),
        ethereum.Value.fromTuple(decodedContext),
        ethereum.Value.fromSignedBigInt(inFlowRate),
        ethereum.Value.fromAddress(sender)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getLastPool(): PoolInternalV2__getLastPoolResultPoolStruct {
    let result = super.call(
      "getLastPool",
      "getLastPool():((uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256)))",
      []
    );

    return changetype<PoolInternalV2__getLastPoolResultPoolStruct>(
      result[0].toTuple()
    );
  }

  try_getLastPool(): ethereum.CallResult<
    PoolInternalV2__getLastPoolResultPoolStruct
  > {
    let result = super.tryCall(
      "getLastPool",
      "getLastPool():((uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256)))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PoolInternalV2__getLastPoolResultPoolStruct>(
        value[0].toTuple()
      )
    );
  }

  getLastTimestmap(): BigInt {
    let result = super.call(
      "getLastTimestmap",
      "getLastTimestmap():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getLastTimestmap(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastTimestmap",
      "getLastTimestmap():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPool(timestamp: BigInt): PoolInternalV2__getPoolResultPoolStruct {
    let result = super.call(
      "getPool",
      "getPool(uint256):((uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256)))",
      [ethereum.Value.fromUnsignedBigInt(timestamp)]
    );

    return changetype<PoolInternalV2__getPoolResultPoolStruct>(
      result[0].toTuple()
    );
  }

  try_getPool(
    timestamp: BigInt
  ): ethereum.CallResult<PoolInternalV2__getPoolResultPoolStruct> {
    let result = super.tryCall(
      "getPool",
      "getPool(uint256):((uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256)))",
      [ethereum.Value.fromUnsignedBigInt(timestamp)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PoolInternalV2__getPoolResultPoolStruct>(value[0].toTuple())
    );
  }

  getSupplier(
    _supplier: Address
  ): PoolInternalV2__getSupplierResultSupplierStruct {
    let result = super.call(
      "getSupplier",
      "getSupplier(address):((uint256,address,uint256,uint256,uint256,uint256,uint256,(int96,bytes32),(int96,bytes32,uint256,uint256,uint256,uint256,bytes32),(uint256,uint256)))",
      [ethereum.Value.fromAddress(_supplier)]
    );

    return changetype<PoolInternalV2__getSupplierResultSupplierStruct>(
      result[0].toTuple()
    );
  }

  try_getSupplier(
    _supplier: Address
  ): ethereum.CallResult<PoolInternalV2__getSupplierResultSupplierStruct> {
    let result = super.tryCall(
      "getSupplier",
      "getSupplier(address):((uint256,address,uint256,uint256,uint256,uint256,uint256,(int96,bytes32),(int96,bytes32,uint256,uint256,uint256,uint256,bytes32),(uint256,uint256)))",
      [ethereum.Value.fromAddress(_supplier)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<PoolInternalV2__getSupplierResultSupplierStruct>(
        value[0].toTuple()
      )
    );
  }

  lastPoolTimestamp(): BigInt {
    let result = super.call(
      "lastPoolTimestamp",
      "lastPoolTimestamp():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_lastPoolTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "lastPoolTimestamp",
      "lastPoolTimestamp():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ops(): Address {
    let result = super.call("ops", "ops():(address)", []);

    return result[0].toAddress();
  }

  try_ops(): ethereum.CallResult<Address> {
    let result = super.tryCall("ops", "ops():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  parseLoanData(data: Bytes): BigInt {
    let result = super.call("parseLoanData", "parseLoanData(bytes):(uint256)", [
      ethereum.Value.fromBytes(data)
    ]);

    return result[0].toBigInt();
  }

  try_parseLoanData(data: Bytes): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "parseLoanData",
      "parseLoanData(bytes):(uint256)",
      [ethereum.Value.fromBytes(data)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolByTimestamp(param0: BigInt): PoolInternalV2__poolByTimestampResult {
    let result = super.call(
      "poolByTimestamp",
      "poolByTimestamp(uint256):(uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new PoolInternalV2__poolByTimestampResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBigInt(),
      result[8].toBigInt(),
      result[9].toBigInt(),
      result[10].toBigInt(),
      result[11].toBigInt(),
      result[12].toBigInt(),
      changetype<PoolInternalV2__poolByTimestampResultApyStruct>(
        result[13].toTuple()
      )
    );
  }

  try_poolByTimestamp(
    param0: BigInt
  ): ethereum.CallResult<PoolInternalV2__poolByTimestampResult> {
    let result = super.tryCall(
      "poolByTimestamp",
      "poolByTimestamp(uint256):(uint256,uint256,uint256,uint256,uint256,int96,int96,uint256,uint256,uint256,uint256,uint256,uint256,(uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolInternalV2__poolByTimestampResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBigInt(),
        value[8].toBigInt(),
        value[9].toBigInt(),
        value[10].toBigInt(),
        value[11].toBigInt(),
        value[12].toBigInt(),
        changetype<PoolInternalV2__poolByTimestampResultApyStruct>(
          value[13].toTuple()
        )
      )
    );
  }

  poolTimestampById(param0: BigInt): BigInt {
    let result = super.call(
      "poolTimestampById",
      "poolTimestampById(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_poolTimestampById(param0: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "poolTimestampById",
      "poolTimestampById(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  proxiableUUID(): Bytes {
    let result = super.call("proxiableUUID", "proxiableUUID():(bytes32)", []);

    return result[0].toBytes();
  }

  try_proxiableUUID(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "proxiableUUID",
      "proxiableUUID():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  suppliersByAddress(
    param0: Address
  ): PoolInternalV2__suppliersByAddressResult {
    let result = super.call(
      "suppliersByAddress",
      "suppliersByAddress(address):(uint256,address,uint256,uint256,uint256,uint256,uint256,(int96,bytes32),(int96,bytes32,uint256,uint256,uint256,uint256,bytes32),(uint256,uint256))",
      [ethereum.Value.fromAddress(param0)]
    );

    return new PoolInternalV2__suppliersByAddressResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toBigInt(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      changetype<PoolInternalV2__suppliersByAddressResultInStreamStruct>(
        result[7].toTuple()
      ),
      changetype<PoolInternalV2__suppliersByAddressResultOutStreamStruct>(
        result[8].toTuple()
      ),
      changetype<PoolInternalV2__suppliersByAddressResultApyStruct>(
        result[9].toTuple()
      )
    );
  }

  try_suppliersByAddress(
    param0: Address
  ): ethereum.CallResult<PoolInternalV2__suppliersByAddressResult> {
    let result = super.tryCall(
      "suppliersByAddress",
      "suppliersByAddress(address):(uint256,address,uint256,uint256,uint256,uint256,uint256,(int96,bytes32),(int96,bytes32,uint256,uint256,uint256,uint256,bytes32),(uint256,uint256))",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolInternalV2__suppliersByAddressResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toBigInt(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        changetype<PoolInternalV2__suppliersByAddressResultInStreamStruct>(
          value[7].toTuple()
        ),
        changetype<PoolInternalV2__suppliersByAddressResultOutStreamStruct>(
          value[8].toTuple()
        ),
        changetype<PoolInternalV2__suppliersByAddressResultApyStruct>(
          value[9].toTuple()
        )
      )
    );
  }

  terminateFlow(newCtx: Bytes, sender: Address): Bytes {
    let result = super.call(
      "terminateFlow",
      "terminateFlow(bytes,address):(bytes)",
      [ethereum.Value.fromBytes(newCtx), ethereum.Value.fromAddress(sender)]
    );

    return result[0].toBytes();
  }

  try_terminateFlow(
    newCtx: Bytes,
    sender: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "terminateFlow",
      "terminateFlow(bytes,address):(bytes)",
      [ethereum.Value.fromBytes(newCtx), ethereum.Value.fromAddress(sender)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  totalYieldEarnedSupplier(
    _supplier: Address,
    currentYieldSnapshot: BigInt
  ): BigInt {
    let result = super.call(
      "totalYieldEarnedSupplier",
      "totalYieldEarnedSupplier(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_supplier),
        ethereum.Value.fromUnsignedBigInt(currentYieldSnapshot)
      ]
    );

    return result[0].toBigInt();
  }

  try_totalYieldEarnedSupplier(
    _supplier: Address,
    currentYieldSnapshot: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "totalYieldEarnedSupplier",
      "totalYieldEarnedSupplier(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_supplier),
        ethereum.Value.fromUnsignedBigInt(currentYieldSnapshot)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  updateFlow(newCtx: Bytes, inFlowRate: BigInt, sender: Address): Bytes {
    let result = super.call(
      "updateFlow",
      "updateFlow(bytes,int96,address):(bytes)",
      [
        ethereum.Value.fromBytes(newCtx),
        ethereum.Value.fromSignedBigInt(inFlowRate),
        ethereum.Value.fromAddress(sender)
      ]
    );

    return result[0].toBytes();
  }

  try_updateFlow(
    newCtx: Bytes,
    inFlowRate: BigInt,
    sender: Address
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "updateFlow",
      "updateFlow(bytes,int96,address):(bytes)",
      [
        ethereum.Value.fromBytes(newCtx),
        ethereum.Value.fromSignedBigInt(inFlowRate),
        ethereum.Value.fromAddress(sender)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }
}

export class _poolUpdateCall extends ethereum.Call {
  get inputs(): _poolUpdateCall__Inputs {
    return new _poolUpdateCall__Inputs(this);
  }

  get outputs(): _poolUpdateCall__Outputs {
    return new _poolUpdateCall__Outputs(this);
  }
}

export class _poolUpdateCall__Inputs {
  _call: _poolUpdateCall;

  constructor(call: _poolUpdateCall) {
    this._call = call;
  }
}

export class _poolUpdateCall__Outputs {
  _call: _poolUpdateCall;

  constructor(call: _poolUpdateCall) {
    this._call = call;
  }
}

export class _redeemDepositCall extends ethereum.Call {
  get inputs(): _redeemDepositCall__Inputs {
    return new _redeemDepositCall__Inputs(this);
  }

  get outputs(): _redeemDepositCall__Outputs {
    return new _redeemDepositCall__Outputs(this);
  }
}

export class _redeemDepositCall__Inputs {
  _call: _redeemDepositCall;

  constructor(call: _redeemDepositCall) {
    this._call = call;
  }

  get redeemAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _supplier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class _redeemDepositCall__Outputs {
  _call: _redeemDepositCall;

  constructor(call: _redeemDepositCall) {
    this._call = call;
  }
}

export class _redeemFlowCall extends ethereum.Call {
  get inputs(): _redeemFlowCall__Inputs {
    return new _redeemFlowCall__Inputs(this);
  }

  get outputs(): _redeemFlowCall__Outputs {
    return new _redeemFlowCall__Outputs(this);
  }
}

export class _redeemFlowCall__Inputs {
  _call: _redeemFlowCall;

  constructor(call: _redeemFlowCall) {
    this._call = call;
  }

  get _outFlowRate(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _supplier(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class _redeemFlowCall__Outputs {
  _call: _redeemFlowCall;

  constructor(call: _redeemFlowCall) {
    this._call = call;
  }
}

export class _redeemFlowStopCall extends ethereum.Call {
  get inputs(): _redeemFlowStopCall__Inputs {
    return new _redeemFlowStopCall__Inputs(this);
  }

  get outputs(): _redeemFlowStopCall__Outputs {
    return new _redeemFlowStopCall__Outputs(this);
  }
}

export class _redeemFlowStopCall__Inputs {
  _call: _redeemFlowStopCall;

  constructor(call: _redeemFlowStopCall) {
    this._call = call;
  }

  get _supplier(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class _redeemFlowStopCall__Outputs {
  _call: _redeemFlowStopCall;

  constructor(call: _redeemFlowStopCall) {
    this._call = call;
  }
}

export class _tokensReceivedCall extends ethereum.Call {
  get inputs(): _tokensReceivedCall__Inputs {
    return new _tokensReceivedCall__Inputs(this);
  }

  get outputs(): _tokensReceivedCall__Outputs {
    return new _tokensReceivedCall__Outputs(this);
  }
}

export class _tokensReceivedCall__Inputs {
  _call: _tokensReceivedCall;

  constructor(call: _tokensReceivedCall) {
    this._call = call;
  }

  get from(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class _tokensReceivedCall__Outputs {
  _call: _tokensReceivedCall;

  constructor(call: _tokensReceivedCall) {
    this._call = call;
  }
}

export class CancelTaskCall extends ethereum.Call {
  get inputs(): CancelTaskCall__Inputs {
    return new CancelTaskCall__Inputs(this);
  }

  get outputs(): CancelTaskCall__Outputs {
    return new CancelTaskCall__Outputs(this);
  }
}

export class CancelTaskCall__Inputs {
  _call: CancelTaskCall;

  constructor(call: CancelTaskCall) {
    this._call = call;
  }

  get _taskId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CancelTaskCall__Outputs {
  _call: CancelTaskCall;

  constructor(call: CancelTaskCall) {
    this._call = call;
  }
}

export class CreateFlowCall extends ethereum.Call {
  get inputs(): CreateFlowCall__Inputs {
    return new CreateFlowCall__Inputs(this);
  }

  get outputs(): CreateFlowCall__Outputs {
    return new CreateFlowCall__Outputs(this);
  }
}

export class CreateFlowCall__Inputs {
  _call: CreateFlowCall;

  constructor(call: CreateFlowCall) {
    this._call = call;
  }

  get newCtx(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get decodedContext(): CreateFlowCallDecodedContextStruct {
    return changetype<CreateFlowCallDecodedContextStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }

  get inFlowRate(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get sender(): Address {
    return this._call.inputValues[3].value.toAddress();
  }
}

export class CreateFlowCall__Outputs {
  _call: CreateFlowCall;

  constructor(call: CreateFlowCall) {
    this._call = call;
  }

  get updateCtx(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateFlowCallDecodedContextStruct extends ethereum.Tuple {
  get appCallbackLevel(): i32 {
    return this[0].toI32();
  }

  get callType(): i32 {
    return this[1].toI32();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get msgSender(): Address {
    return this[3].toAddress();
  }

  get agreementSelector(): Bytes {
    return this[4].toBytes();
  }

  get userData(): Bytes {
    return this[5].toBytes();
  }

  get appCreditGranted(): BigInt {
    return this[6].toBigInt();
  }

  get appCreditWantedDeprecated(): BigInt {
    return this[7].toBigInt();
  }

  get appCreditUsed(): BigInt {
    return this[8].toBigInt();
  }

  get appAddress(): Address {
    return this[9].toAddress();
  }

  get appCreditToken(): Address {
    return this[10].toAddress();
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _resolverSettings(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _owner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _superToken(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PushedToStrategyCall extends ethereum.Call {
  get inputs(): PushedToStrategyCall__Inputs {
    return new PushedToStrategyCall__Inputs(this);
  }

  get outputs(): PushedToStrategyCall__Outputs {
    return new PushedToStrategyCall__Outputs(this);
  }
}

export class PushedToStrategyCall__Inputs {
  _call: PushedToStrategyCall;

  constructor(call: PushedToStrategyCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class PushedToStrategyCall__Outputs {
  _call: PushedToStrategyCall;

  constructor(call: PushedToStrategyCall) {
    this._call = call;
  }
}

export class TerminateFlowCall extends ethereum.Call {
  get inputs(): TerminateFlowCall__Inputs {
    return new TerminateFlowCall__Inputs(this);
  }

  get outputs(): TerminateFlowCall__Outputs {
    return new TerminateFlowCall__Outputs(this);
  }
}

export class TerminateFlowCall__Inputs {
  _call: TerminateFlowCall;

  constructor(call: TerminateFlowCall) {
    this._call = call;
  }

  get newCtx(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get sender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TerminateFlowCall__Outputs {
  _call: TerminateFlowCall;

  constructor(call: TerminateFlowCall) {
    this._call = call;
  }

  get updateCtx(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class TransferSTokensCall extends ethereum.Call {
  get inputs(): TransferSTokensCall__Inputs {
    return new TransferSTokensCall__Inputs(this);
  }

  get outputs(): TransferSTokensCall__Outputs {
    return new TransferSTokensCall__Outputs(this);
  }
}

export class TransferSTokensCall__Inputs {
  _call: TransferSTokensCall;

  constructor(call: TransferSTokensCall) {
    this._call = call;
  }

  get _sender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _receiver(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferSTokensCall__Outputs {
  _call: TransferSTokensCall;

  constructor(call: TransferSTokensCall) {
    this._call = call;
  }
}

export class UpdateFlowCall extends ethereum.Call {
  get inputs(): UpdateFlowCall__Inputs {
    return new UpdateFlowCall__Inputs(this);
  }

  get outputs(): UpdateFlowCall__Outputs {
    return new UpdateFlowCall__Outputs(this);
  }
}

export class UpdateFlowCall__Inputs {
  _call: UpdateFlowCall;

  constructor(call: UpdateFlowCall) {
    this._call = call;
  }

  get newCtx(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get inFlowRate(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get sender(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class UpdateFlowCall__Outputs {
  _call: UpdateFlowCall;

  constructor(call: UpdateFlowCall) {
    this._call = call;
  }

  get updatedCtx(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class UpgradeToCall extends ethereum.Call {
  get inputs(): UpgradeToCall__Inputs {
    return new UpgradeToCall__Inputs(this);
  }

  get outputs(): UpgradeToCall__Outputs {
    return new UpgradeToCall__Outputs(this);
  }
}

export class UpgradeToCall__Inputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpgradeToCall__Outputs {
  _call: UpgradeToCall;

  constructor(call: UpgradeToCall) {
    this._call = call;
  }
}

export class UpgradeToAndCallCall extends ethereum.Call {
  get inputs(): UpgradeToAndCallCall__Inputs {
    return new UpgradeToAndCallCall__Inputs(this);
  }

  get outputs(): UpgradeToAndCallCall__Outputs {
    return new UpgradeToAndCallCall__Outputs(this);
  }
}

export class UpgradeToAndCallCall__Inputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }

  get newImplementation(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class UpgradeToAndCallCall__Outputs {
  _call: UpgradeToAndCallCall;

  constructor(call: UpgradeToAndCallCall) {
    this._call = call;
  }
}

export class WithdrawStepCall extends ethereum.Call {
  get inputs(): WithdrawStepCall__Inputs {
    return new WithdrawStepCall__Inputs(this);
  }

  get outputs(): WithdrawStepCall__Outputs {
    return new WithdrawStepCall__Outputs(this);
  }
}

export class WithdrawStepCall__Inputs {
  _call: WithdrawStepCall;

  constructor(call: WithdrawStepCall) {
    this._call = call;
  }

  get _receiver(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawStepCall__Outputs {
  _call: WithdrawStepCall;

  constructor(call: WithdrawStepCall) {
    this._call = call;
  }
}
